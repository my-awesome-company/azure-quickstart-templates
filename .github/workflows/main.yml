# This is a basic workflow to help you get started with Actions

name: Deploy to Azure

on:
  issues:
    types: [labeled]

jobs:
  deploy:
    if: contains(github.event.issue.labels.*.name, 'approved')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Start deployment
        uses: bobheadxi/deployments@master
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: staging

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: whiteducksoftware/azure-arm-action-js@v3
        id: deploy
        name: Deploy Azure template
        with:
          resourceGroupName: pierluigi-demos
          templateLocation: ./101-webapp-linux-node/azuredeploy.json
          #parameters: ./101-webapp-linux-node/azuredeploy.parameters.json
      - run: echo ${{ steps.deploy.outputs.webAppName }}
      - run: echo ${{ steps.deploy.outputs.location }}
      - name: update deployment status
        uses: bobheadxi/deployments@master
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: '${{ steps.deploy.outputs.webAppName }}.azurewebsites.net'  
      - uses: actions/github-script@0.3.0
        if: success()
        with:
          github-token: ${{github.token}}
          script: |
            const body = `## Deployment Completed
The requested deployment has completed.

*Deployment Status*: ${job.status}
*Resource URL*: https://${steps.deploy.outputs.webAppName}.azurewebsites.net

[List Deployments](../deployments)
`;
            github.issues.createComment({...context.issue, body })
