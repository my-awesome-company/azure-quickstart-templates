name: TEST

on:
  project_card

# TODO check secrets.ACTION_PAT

env:
  COL_TODO: 'To do'
  COL_INPG: 'In progress'
  COL_DONE: 'Done'
jobs:
  update-project:
    if: github.event.action == 'moved'
    runs-on: [laptop]
  
    steps:
      - uses: actions/github-script@0.3.0
        # Ensure the card is an issue
        if: contains(github.event.project_card.content_url, 'issues/')
        with:
          github-token: ${{secrets.ACTION_PAT}}
          script: |
            const {column_id, content_url } = context.payload.project_card;
            
            let { data: { name } } = await github.projects.getColumn({
              column_id,
            });

            let { data : { labels, body, state, title, number, user }} = await github.request(`GET ${content_url}`);
            // console.log(user.login, labels, title, body);

            // TODO Check for a specific label
            
            const { COL_TODO, COL_INPG, COL_DONE} = process.env;
            switch (name) {
              case COL_TODO:
                console.log("New project requested");
                break;
              case COL_INPG:
                console.log("Start new project");
                // TODO create repository from the specified template found in the issue
                const template_owner = 'pierluigi';
                const template_repo = "simple-nodejs-app-template";
                // Add random seed to repo name
                const name =  `${template_repo}-${Math.random().toString(36).substring(7)}`;
                console.log(`Attempting to create ${name} for ${user.login}`);

                let res = await github.repos.createUsingTemplate({
                  template_owner,
                  template_repo,
                  name,
                  owner: user.login
                });
                
                if (res.status == 201) {

                  const comment_body = `
                  ## Created new project from ${template_owner}/${template_repo}
                  The repository [${res.data.full_name}](${res.data.html_url}) has been created and is now available.

                  ## Next steps
                  - [${res.data.html_url}/settings/access](Invite users)
                  - ...
                  
                  `;


                  github.issues.createComment({
                    issue_number: number, 
                    owner: user.login, 
                    repo: context.repo.repo,
                    body: comment_body
                  })

                } else {
                  core.setFailed(`Could not create repo ${name} for ${user.login}`);
                }
                
                break;
              case COL_DONE:
                console.log("Close project");
                break;
              default:
                console.log(`Column ${name} not present. Skipping...`); 
                break;
            }            
    